#!/usr/bin/env node
"use strict";

var log = require("engram/logger");

var is = require("is");
var https = require("https");
var express = require("express");

var Result = require("engram/result").Result;
var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;

var routes = require("engram/routes");
var database = require("engram/database");
var createTables = require("engram/create-tables");

var manager = require("engram/manager");

var statusManager = function (reporter, state) {

	findUnresolvedURL(function (urlResult) {

		urlResult.then(function (url) {

			if (url.length === 0) {
				setTimeout(reporter.bind({}, url, state), state.control.delay);
			} else {

				requestURL(url[0].url, {}, function (err, res, body) {

					updateStatus(url, res.statusCode, function (result) {
						setTimeout(reporter.bind({}, url, state), state.control.delay);
					});
				});
			}
		});
	});
};

var findUnresolvedURL = function (callback) {

	var sql = "\n\tSELECT * FROM url\n\n\tWHERE url.is_soft_failer is NULL\n\tOR url.status_code is NULL\n\n\tLIMIT 1;\n\t";

	database["do"](function (db, callback) {

		db.all(sql, function (err, rows) {
			err ? callback(Err(err)) : callback(Ok(rows));
		});
	}, callback);
};

var updateStatus = function (url, statusCode, continuation) {

	var sql = "UPDATE url SET status_code=$statusCode WHERE url.url = $url";

	database["do"](function (db, callback) {

		db.run(sql, {
			$url: url,
			$statusCode: statusCode
		});
	}, continuation);
};

var moniter = function (recall, state) {

	console.log("monitering!");

	recall(undefined, state.control.delay);
};

var reporter = function (url, state) {

	if (url.length === 0) {
		state.stats.noURL += 1;
	}

	state.jobRegister.checkin = new Date().getTime();

	return state;
};

var state = {
	control: {
		delay: 1000
	},
	stats: {
		noURL: 0
	}
};

module.exports = {
	moniter: moniter,
	reporter: reporter,
	state: state
};