
"use strict"





var helmet     = require('helmet')
var commons    = require('engram/commons/commons')
var validators = require('engram/rest/validators')



var addValidators = handlers => {

	var objMap = commons.hof.objMap

	return objMap(handlers, (protocol, groups) => {
		return objMap(groups, (method, groups) => {
			return objMap(groups, (fnName, fns) => {

				var validator = validators[protocol][method][fnName]
				return validator.concat(fns)

			})
		})
	})

}




var handlers = {
	https: {
		get:    { },
		post:   { },
		delete: { },
		all:    { }
	}
}





handlers.https.all['*'] = [
	helmet( )
]




handlers.https.get['/bookmarks'] = [
	(req, res) => {
		res.end( )
	}
]

handlers.https.post['/import']  = [
	(req, res) => {
		res.end( )
	}
]

handlers.https.get['/bookmarks/:id']  = [
	(req, res) => {
		res.end( )
	}
]

handlers.https.delete['/bookmarks/:id']  = [
	(req, res) => {
		res.end( )
	}
]

handlers.https.get['/archive/:id']  = [
	(req, res) => {
		res.end( )
	}
]





module.exports = addValidators(handlers)
