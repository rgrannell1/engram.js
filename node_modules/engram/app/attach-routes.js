
"use strict"





var is  = require('is')
var log = require('engram/logging/logger')





var runBoilerplate = spec => {

	runBoilerplate.precond(spec)

	return function (req, res)	{

	}
}

runBoilerplate.precond = spec => {
	is.always.object(spec)
}





var createWrapper = (spec, fn) => {

	return function ( ) {

		var args = Array.prototype.slice.apply(arguments)

		runBoilerplate(spec).apply({ }, args)

		fn.apply({ }, args)

	}

}






var compileRoute = (app, spec) => {

	compileRoute.precond(app, spec)

	var precondition = (req, res, next) => next( )
	var routes       = [precondition].concat( spec.fns.map(createWrapper.bind({ }, spec)) )

	app[spec.method]( spec.route, routes)
	return app

}

compileRoute.precond = (app, spec) => {

	is.always.object(spec)

	is.always.array(spec.fns)
	is.always.string(spec.route)
	is.always.string(spec.method)

}





var attachRoutes = (app, specs) => {

	app.specs = specs
	attachRoutes.precond(app, specs)

	return specs.reduce(compileRoute, app)

}

attachRoutes.precond = (app, routes) => {
	is.always.array(routes)
}




module.exports = attachRoutes
