
"use strict"





var is  = require('is')
var log = require('engram/logging/logger')





var runBoilerplate = spec => {
	return function (args)	{

		log.global.info({ }, spec.route)

	}
}

runBoilerplate.precond = spec => {
	runBoilerplate.precond(spec)
}





var compileRoute = (app, spec) => {

	compileRoute.precond(app, spec)

	var shouldRun = (req, res, next) => {
		next( )
	}

	var boilerplated = spec.fns.map(fn => {
		return function ( ) {

			var args = Array.prototype.slice.apply(arguments)

			runBoilerplate(spec)(args)

			fn.apply({ }, args)

		}
	})

	app[spec.method]( spec.route, [shouldRun].concat(boilerplated) )

	return app

}

compileRoute.precond = (app, spec) => {

	is.always.object(spec)

	is.always.array(spec.fns)
	is.always.string(spec.route)
	is.always.string(spec.method)

}





var attachRoutes = (app, specs) => {

	app.specs = specs
	attachRoutes.precond(app, specs)

	return specs.reduce(compileRoute, app)

}

attachRoutes.precond = (app, routes) => {
	is.always.array(routes)
}




module.exports = attachRoutes
