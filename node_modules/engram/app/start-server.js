#!/usr/bin/env node

"use strict"




var is                       = require('is')

var log                       = require('engram/logging/logger')
var commons                   = require('engram/commons/commons')

var createApp                 = require('engram/app/create-app')
var ensureTLSCredentialsExist = require('engram/security/ensure-tls-credentials-exist')
var setupDatabase             = require('engram/persistance/setup-database')




var callbacks = { }

callbacks.wipeData = err => {

	if (err) {

		log.global.error('failed to wipe database/logs.')

	} else {

		log.global.info('successfully cleared database/logs.')

	}

}





var server = (rawArgs, callback) => {

	var args = server.processArgs(server.validateArgs(rawArgs))

	if (args.wipe) {

		if (args.database) {
			wipeData.database(callbacks.wipeData)
		}

		if (args.logs) {
			wipeData.logs(callbacks.wipeData)
		}

	} else {

		ensureTLSCredentialsExist(args, err => {

			if (!args.run) {
				return callback( )
			}

			if (err) {
				callback(err)
			} else {

				setupDatabase(args.dbpath, database => {
					createApp(args, database, callback)
				})

			}

		})

	}

}

server.validateArgs = args => {

	is.always.string(args['--certpath'])
	is.always.string(args['--keypath'])
	is.always.string(args['--dbpath'])
	is.always.string(args['--port'])

	is.always.boolean(args['--logs'])
	is.always.boolean(args['--database'])

	is.always.boolean(args.run)
	is.always.boolean(args.certs)
	is.always.boolean(args.wipe)

	return args

}

server.processArgs = args => {

	var renamed = commons.cli.renameArgs(args)

	try {

		renamed.port = parseInt(renamed.port, 10)

	} catch (err) {
		throw Error('failed to parse "port" to integer.')
	}

	return renamed

}





module.exports = server
