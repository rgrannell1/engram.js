#!/usr/bin/env node

"use strict"




var is                       = require('is')

var log                       = require('engram/logging/logger')
var Result                    = require('engram/commons/result').Result
var commons                   = require('engram/commons/commons')
var Ok                        = require('engram/commons/result').Ok
var Err                       = require('engram/commons/result').Err

var createApp                  = require('engram/app/create-app')
var ensureTLSCredentialsExist = require('engram/security/ensure-tls-credentials-exist')
var setupDatabase             = require('engram/persistance/setup-database')




var callbacks = { }

callbacks.wipeData = wipeResult => {

	wipeResult.onOk(( ) => {
		log.global.info('successfully cleared database/logs.')
	})

	wipeResult.onErr(( ) => {
		log.global.info('failed to wipe database/logs.')
	})

}





var server = (rawArgs, callback) => {

	var args = server.processArgs(server.validateArgs(rawArgs))

	if (args.wipe) {

		if (args.database) {
			wipeData.database(callbacks.wipeData)
		}

		if (args.logs) {
			wipeData.logs(callbacks.wipeData)
		}

	} else {

		ensureTLSCredentialsExist(args, ensureResult => {

			console.log(ensureResult)

			ensureResult.onErr(err => {
				log.global.error({err}, 'failed to ensure https certificates exist.')
			})

			setupDatabase(args.dbpath, database => {
				createApp(args, database, callback)
			})

		})

	}

}

server.validateArgs = args => {

	is.always.string(args['--certpath'])
	is.always.string(args['--keypath'])
	is.always.string(args['--dbpath'])
	is.always.string(args['--port'])

	is.always.boolean(args['--logs'])
	is.always.boolean(args['--database'])

	is.always.boolean(args.run)
	is.always.boolean(args.certs)
	is.always.boolean(args.wipe)

	return args

}

server.processArgs = args => {
	return commons.cli.renameArgs(args)
}





module.exports = server
