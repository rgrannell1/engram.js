#!/usr/bin/env node
"use strict";

var log = require("engram/logger");

var is = require("is");
var express = require("express");

var Result = require("engram/result").Result;
var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;

var routes = require("engram/routes");
var database = require("engram/database");
var createTables = require("engram/create-tables");

var monitorStatus = require("engram/moniter-status");
var moniterSoftFail = require("engram/moniter-softfail");
var moniterTitle = require("engram/moniter-title");

var moniterWorkers = require("engram/moniter-workers");
var moniterTitle = require("engram/moniter-title");
var exitHandler = require("engram/exit-handler");

var manager = require("engram/manager");

var startServer = function (port, callback) {

	callback(Result.of(function () {

		var app = express();

		app.listen(port, function () {
			log.info("engram listening on port " + port);
		}).on("error", function (err) {

			var handled = {
				EADDRINUSE: "port " + port + " currently in use"
			};

			handled.hasOwnProperty(err.code) ? log.error(handled[err.code]) : log.error(err.toString());
		});

		app.use("/api", routes.api).use("/", routes.app).use("/", routes.save);

		process.on("uncaughtException", exitHandler.bind({}, true));
	}));
};

/*
	the processes to keep running indefinitely. A single moniter checks each of these
	processes is responding. Each moniter manages its own task lifespans, and logging.

	current tasks:

	status   - get the status code for each bookmark.
	softFail - check if a link is a soft-failure.
	title    - get the title for each resource.

*/

var daemons = {
	status: monitorStatus,
	softFail: moniterSoftFail,
	title: moniterTitle
};

var engram = function (_ref) {
	var port = _ref.port;

	createTables(function (result) {

		// -- fatal error.
		if (result && result.isErr) {
			throw result.fromErr;
		}

		startServer(port, function (result) {

			// -- fatal error.
			if (result && result.isErr) {
				throw result.fromErr;
			}

			manager.moniterWorkers(daemons);
		});
	});
};

module.exports = engram;