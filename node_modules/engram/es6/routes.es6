#!/usr/bin/env node

"use strict"





var log = require('engram/logger')

try {

	var Result        = require('engram/result').Result
	var Ok            = require('engram/result').Ok
	var Err           = require('engram/result').Err

	var is           = require('is')
	var express      = require('express')

	var saveBookmark = require('engram/save-bookmark')
	var URL          = require('url')


} catch (err) {

	log.fatal({
		message: err.message,
		stacK:   err.stack,
	}, 'failed to load dependencies.')

	process.exit( )

}








var api = express.Router( )
var app = express.Router( )





var parseURL = url => {

	return Result.of(( ) => {

		var parsed = URL.parse(url)

		if (!is.string(parsed.protocol)) {
			parsed.protocol = 'http:'
			parsed.slashes  = true
		}

		return URL.format(parsed)

	})

}

app.get('/', (req, res) => {

	res.send('<h1>hi!</h1>')
	res.end( )

})

app.get('/bookmarks', (req, res) => {

	res.send('<h1>hi!</h1>')
	res.end( )

})

app.get('/favico.ico', (req, res) => {

	res.status(404)
	res.end( )

})

app.get('/import', (req, res) => {

})

app.get('/export', (req, res) => {

})





app.get('/*', (req, res) => {

	var pathResult = Ok(req)
		.then(req => req.url)
		.then(url => url.slice(1))
		.then(parseURL)

	pathResult.onOk(path => {

		log.info({url: req.url}, `GET ${path}`)

		saveBookmark(path, new Date( ).getTime( ), {req, res})

		res.status(204)
		res.end( )

	})

	pathResult.onErr(path => {

		log.error({url: req.url}, `failed to save url`)

		res.status(404)
		res.end( )

	})

})



module.exports = {
	api,
	app
}
