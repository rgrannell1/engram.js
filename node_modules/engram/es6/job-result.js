#!/usr/bin/env node

"use strict"





var is        = require('is')
var log       = require('engram/es5/logger')

var constants = require('engram/es5/constants')
var message   = require('engram/es5/message')





constants.BUS.on(message.TITLE_FINISHED, saveResult => {

	saveResult.onErr(err => {
		log.jobResult.error({message: err.message, stack: err.stack}, 'title extraction failed.')
	})

	saveResult.onOk(url => {

		if (!is.undefined(url)) {
			log.jobResult.info(`successfully extracted title for ${url}`)
		}

	})

})

constants.BUS.on(message.SOFTFAIL_FINISHED, saveResult => {

	saveResult.onErr(err => {
		log.jobResult.error({message: err.message, stack: err.stack}, 'soft-fail determination failed.')
	})

	saveResult.onOk(url => {

		if (!is.undefined(url)) {
			log.jobResult.info(`successfully determinated soft-fail status for ${url}`)
		}

	})

})

constants.BUS.on(message.STATUS_FINISHED, saveResult => {

	saveResult.onErr(err => {
		log.jobResult.error({message: err.message, stack: err.stack}, 'status determination failed.')
	})

	saveResult.onOk(url => {

		if (!is.undefined(url)) {
			log.jobResult.info(`successfully determinated fail status for ${url}`)
		}

	})

})

constants.BUS.on(message.ARCHIVE_FINISHED, archiveResult => {

	archiveResult.onErr(err => {
		log.jobResult.error({message: err.message, stack: err.stack}, 'status determination failed.')
	})

	archiveResult.onOk(url => {

		if (!is.undefined(url)) {
			log.jobResult.info(`successfully saved archive for ${url}`)
		}

	})

})
