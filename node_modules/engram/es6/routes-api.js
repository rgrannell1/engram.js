#!/usr/bin/env node

"use strict"





var log             = require('engram/es5/logger')

var Ok              = require('engram/es5/result').Ok

var express         = require('express')
var bodyParser      = require('body-parser')

var fetchBookmarks  = require('engram/es5/fetch-bookmarks')

var deleteBookmark  = require('engram/es5/delete-bookmark')
var importBookmarks = require('engram/es5/import-bookmarks')

var parse           = require('engram/es5/parse')








var api = express.Router( )





var routes = {
	get:    { },
	post:   { },
	delete: { }
}





routes.get['/bookmarks'] = (req, res) => {

	var maxIdResult  = parse.id(req.query.maxID)
	var amountResult = parse.amount(req.query.amount)

	Ok([maxIdResult, amountResult]).productOf( )
	.then(pair => {

		fetchBookmarks(pair[0], pair[1], res)

	})

}

routes.get['/bookmarks/all'] = (req, res) => {

	fetchBookmarks(10000000, 10000000, res)

}





routes.post['/import'] = (req, res) => {

	log.global.info('POST /import')

	var importResult = parse.bookmarks(req.body)





	importResult.onErr( ({message, code}) => {

		log.global.error({message, code}, 'import failed.')

		res.status(code)
		res.end( )

	})

	importResult.onOk(bookmarks => {
		importBookmarks(bookmarks, res)
	})

}

routes.delete['/bookmarks/:id'] = (req, res) => {

	log.global.info(`DELETE /api/bookmarks/${req.params.id}`)

	deleteBookmark(res, req.params.id)

}










api.get( '/bookmarks',        routes.get['/bookmarks'] )
api.get( '/bookmarks/all',    routes.get['/bookmarks/all'] )

api.delete( '/bookmarks/:id', routes.delete['/bookmarks/:id'] )

api.use( bodyParser.json({limit: '100mb'}) )

api.post('/import',           routes.post['/import'])





module.exports = api
