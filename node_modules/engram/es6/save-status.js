#!/usr/bin/env node

"use strict"




var is           = require('is')
var log          = require('engram/es5/logger')

var Ok           = require('engram/es5/result').Ok
var Err          = require('engram/es5/result').Err

var database     = require('engram/es5/database')





/*
	updateStatus(url, statusCode, callback)

	set the status code for a URL.

*/

var updateStatus = (url, statusCode, callback) => {

	updateStatus.precond(url, statusCode, callback)




	var sql = `UPDATE url SET status_code=$statusCode WHERE url = $url`

	database.serialise(db => {

		db.run(sql, {
			$url:        url,
			$statusCode: statusCode
		}, err => {
			err ? callback(Err(err)) : callback(Ok(url))
		})

	})

}

updateStatus.precond = (url, statusCode, callback) => {

	is.always.string(url)
	is.always.number(statusCode)
	is.always.function(callback)

}





/*
	saveStatus(reporter, url)

	request a URL, and save it's to the database.
*/

var saveStatus = ({url, res, body}, reporter) => {

	log.global.debug(`saving status for ${url}`)

	saveStatus.precond({url, res, body}, reporter)

	updateStatus(url, res.statusCode, result => {
		reporter(Ok(url))
	})

}

saveStatus.precond = ({url, res, body}, reporter) => {

	is.always.string(url)
	is.always.object(res)
	is.always.function(reporter)

}






module.exports = saveStatus
