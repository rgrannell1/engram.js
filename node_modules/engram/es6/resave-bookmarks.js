#!/usr/bin/env node

"use strict"





var log           = require('engram/logger')

var is            = require('is')
var Result        = require('engram/result').Result
var Ok            = require('engram/result').Ok
var Err           = require('engram/result').Err

var saveBookmark  = require('engram/save-bookmark')
var createArchive = require('engram/create-archive')
var log           = require('engram/logger')
var database      = require('engram/database')

var request       = require('request')





var resaveBookmark = bookmark => {

	resaveBookmark.precond(bookmark)

	if (!is.string(bookmark.url)) {

		log.error(bookmark, 'attempted to import defective bookmark (no URL).')

	} else {

		var ctime = bookmark.ctime || Math.round(new Date( ).getTime( ) / 1000)

		saveBookmark(decodeURIComponent(bookmark.url), ctime)
	}

}

resaveBookmark.precond = bookmark => {
	is.always.object(bookmark)
}






var resaveBookmarks = (body, req, res) => {

	is.always.object(body)
	is.always.object(req)
	is.always.object(res)

	// -- cast the object to an array.
	var bookmarksResult = Result.of(( ) => {

		return Object.keys(body.data)
			.filter(number => {
				return parseInt(number 10) === parseInt(number 10)
			})
			.map(key => body.data[key])

	})

	bookmarksResult
	.then(data => {

		return data
		.sort((bookmark0, bookmark1) => {
			return bookmark0.ctime - bookmark1.ctime
		})

	})
	.then(data => {
		data.forEach(resaveBookmark)
	})

}





module.exports = resaveBookmarks
