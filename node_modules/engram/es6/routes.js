#!/usr/bin/env node

"use strict"





var log             = require('engram/logger')


var Result          = require('engram/result').Result
var Ok              = require('engram/result').Ok
var Err             = require('engram/result').Err

var is              = require('is')
var express         = require('express')
var bodyParser      = require('body-parser')

var saveBookmark    = require('engram/save-bookmark')
var showBookmarks   = require('engram/show-bookmarks')
var fetchBookmarks  = require('engram/fetch-bookmarks')
var deleteBookmark  = require('engram/delete-bookmark')

var importBookmarks = require('engram/import-bookmarks')
var resaveBookmarks = require('engram/resave-bookmarks')

var URL             = require('url')

var exitHandler     = require('engram/exit-handler')
var mustache        = require('mustache')
var validURL        = require('valid-url')

var api             = require('engram/routes-api')
var save            = require('engram/routes-save')





var app  = express.Router( )





var preprocess = {
	id: id => {

		return Ok(id)
			.then(num => {
				return parseInt(num, 10)
			})
			.then(num => {
				return num !== num
					? Err(422)
					: num

			})
			.then(num => {
				return num < 0
					? Err(422)
					: num
			})
			.then(num => {
				return num > 1000000
					? Err(422)
					: num
			})

	},
	amount: amount => {

		return Ok(amount)
			.then(num => {
				return parseInt(num, 10)
			})
			.then(num => {
				return num !== num
					? Err(422)
					: num

			})
			.then(num => {
				return num < 0
					? Err(422)
					: num
			})
			.then(num => {
				return num > 1000000
					? Err(422)
					: num
			})

	}
}





var parseURL = url => {

	return Result.of(( ) => {

		var parsed = URL.parse(url)

		if (!is.string(parsed.protocol)) {
			url = 'http://' + url
		}


		return validURL.is_web_uri(url)
			? Ok(url)
			: Err(url)

	})

}







app.get('/', (req, res) => {
	res.redirect('/bookmarks')
})

app.get('/bookmarks', (req, res) => {

	log.info('GET /bookmarks')

	res.send(showBookmarks( ))
	res.status(200)

	res.contentType = 'text/html; charset=utf8'

	res.end( )

})

app.use('/public', express.static(process.cwd( ) + '/public'))




app.get('/favicon.ico', (req, res) => {

	res.status(404)
	res.end( )

})






app.get('/import', (req, res) => {

	res.send(importBookmarks( ))
	res.status(200)

	res.contentType = 'text/html; charset=utf8'

	res.end( )


})

app.get('/export', (req, res) => {

})





module.exports = {
	api,
	app,
	save
}
