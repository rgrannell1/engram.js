#!/usr/bin/env node

"use strict"





var log = require('engram/logger')

var is          = require('is')

var Result      = require('engram/result').Result
var Ok          = require('engram/result').Ok
var Err         = require('engram/result').Err


var routes      = require('engram/routes')
var database    = require('engram/database')





var sendNoArchive = res => {

	res.status(404)
	res.send('<h1>nothing to see :/</h1>')

}




var sendArchive = (res, rowResult) => {

	rowResult.onErr(err => {

		res.status(500)
		res.send(err.message)

	})

	rowResult.onOk( rows => {

		if (rows.length === 0) {

			sendNoArchive(res)

		} else {

			res.status(200)
			res.contentType(rows[0].contentType)

			res.send(rows[0].content)

		}

	})

}






var fetchArchive = (res, id) => {

	fetchArchive.precond(id)

	var callback = sendArchive.bind({ }, res)

	database.serialise(db => {

		var sql = `
		SELECT content, content_type AS contentType
		FROM archive
		WHERE archive.url = (
			SELECT url from bookmark
			WHERE bookmark.bookmark_id = $id)

		LIMIT 1;
		`

		db.all(sql, {$id: id}, (err, rows) => {
			callback(err ? Err(err) : Ok(rows))
		})

	})

}

fetchArchive.precond = id => {
	is.always.number(id)
}










module.exports = fetchArchive
