#!/usr/bin/env node

"use strict"





var log          = require('engram/logger')

var Result       = require('engram/result').Result
var Ok           = require('engram/result').Ok
var Err          = require('engram/result').Err

var requestURL   = require('engram/request-url')
var URL          = require('url')

var database     = require('engram/database')
var extractTitle = require('engram/extract-title')










var findUntitledURL = callback => {

	var sql = `
	SELECT * FROM url

	WHERE url.title is NULL

	ORDER BY RANDOM()
	LIMIT 1;
	`

	database.do((db, callback) => {

		db.all(sql, (err, rows) => {
			err ? callback(Err(err)) : callback(Ok(rows))
		})

	}, callback)

}





var updateTitle = (url, title, callback) => {

	var sql = `UPDATE url SET title=$title WHERE url.url = $url`

	database.do((db, callback) => {

		db.run(sql, {
			$url:   url,
			$title: title
		})

	}, callback)

}





var saveTitle = (recall, state, urls) => {

	urls.length === 0
		? recall(Ok(undefined), state.control.delay)
		: extractTitle(urls[0].url, titleResult => {

			titleResult.onErr(err => {
				recall(Err(Err), state.control.delay)
			})

			titleResult.onOk(title => {
				updateTitle(urls[0].url, title, updateResult => {
					recall(updateResult, state.control.delay)
				})
			})

		})

}






var moniter  = (recall, state) => {
	findUntitledURL(urlResult => {

		urlResult.onErr(err => {
			recall(Err(err), state)
		})

		urlResult.onOk(saveTitle.bind({ }, recall, state))

		//recall('', state.control.delay)

	})
}




var reporter = (url, state) => {
	return state
}





var state = {
	control: {
		delay: 10 * 1000
	},
	stats: {
		noURL:    0,
		urlFound: 0
	}
}










module.exports = {
	moniter,
	reporter,
	state
}
