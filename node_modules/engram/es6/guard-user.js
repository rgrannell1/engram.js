#!/usr/bin/env node

"use strict"





var constants = require('engram/es6/constants')
var message   = require('engram/es6/message')
var utils     = require('engram/es6/utils')
var log       = require('engram/es6/logging/logger')

var basicAuth = require('basic-auth')
var fs        = require('fs')





var readWhitelist = fpath => {

	return fs.readFileSync(fpath)
	.toString( )
	.split('\n')
	.filter(val => val && val.length > 0)

}



{

	let whitelist = readWhitelist('data/ip-whitelist')





	var logIpAddress = req => {

		var ip = utils.getIpAddress(req)

		ip.onOk(ip => {

			var isWhitelisted = whitelist.indexOf(ip) !== -1

			isWhitelisted
				? log.security.info({

					ip,	url: req.originalURL

				}, 'whitelisted ip address connected.')
				: log.security.warn({

					ip,	url: req.originalURL

				}, 'non-whitelisted ip address connected!')

		})

		ip.onErr(err => {

			log.security.error({err}, 'failed to extract ip address!')

		})

	}

}






var guardUser = (req, res, next) => {

	constants.BUS.emit(message.USER_RESOLVED, req)
	logIpAddress(req)

	next( )
}




module.exports = guardUser
