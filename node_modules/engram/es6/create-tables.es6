#!/usr/bin/env node

"use strict"





var log          = require('engram/logger')
var is           = require('is')

var database     = require('engram/database')
var createTables = require('engram/create-tables')

var Result       = require('engram/result').Result
var Ok           = require('engram/result').Ok
var Err          = require('engram/result').Err





var statements = [
	`
	CREATE TABLE IF NOT EXISTS bookmark (

		bookmark_id    integer    PRIMARY KEY    AUTOINCREMENT,
		url            text       NOT NULL       REFERENCES url(url),

		ctime          integer    NOT NULL       CHECK(ctime > 0 and ctime <= 4294967295)

	);`,

	`
	CREATE TABLE IF NOT EXISTS url (

		url              text       PRIMARY KEY,

		archive_id       integer    REFERENCES content(archive_id),

		status_code      integer    CHECK(status_code > 0 and status_code < 600),
		is_soft_failer   integer,

		title            text

	);`,

	`
	CREATE TABLE IF NOT EXISTS content (

		archive_id      integer    PRIMARY KEY    AUTOINCREMENT,

		archive         text    NOT NULL,
		content_type    text    NOT NULL,

		UNIQUE(archive, content_type)

	);`

]





var createTables = callback => {

	database.do(
		(db, callback) => {

			statements.forEach(sql => {

				log.info({sql}, 'creating table.')
				db.run(sql, err => {

					if (err) {
						callback(Err(err))
					}

				})

			})

			// -- horrible! not running serially! need to await result of each callback.
			setTimeout(callback, 1000)

		},
		callback
	)

}





module.exports = createTables
