#!/usr/bin/env node

"use strict"





var log = require('engram/logger')

var is           = require('is')
var https        = require('https')
var express      = require('express')

var Result        = require('engram/result').Result
var Ok            = require('engram/result').Ok
var Err           = require('engram/result').Err

var routes       = require('engram/routes')
var database     = require('engram/database')
var createTables = require('engram/create-tables')

var moniterWorkers = require('engram/moniter-workers')

var exitHandler  = require('engram/exit-handler')





var startServer = (port, callback) => {

	callback( Result.of(( ) => {





		var app = express( )

		app
		.listen(port, ( ) => {
			log.info(`engram listening on port ${port}`)
		})
		.on('error', err => {

			var handled = {
				EADDRINUSE: `port ${port} currently in use`
			}

			err.code in handled
				? log.error(handled[err.code])
				: log.error(err.toString( ))

		})

		app
		.use('/api', routes.api)
		.use('/',    routes.app)
		.use('/',    routes.save)

		process.on('uncaughtException', exitHandler.bind({ }, true))
		process.on('SIGINT',            exitHandler.bind({ }, true))
		process.on('exit',              exitHandler.bind({ }, false))






	}) )

}





var engram = ({port}) => {

	createTables(result => {

		// -- fatal error.
		if (result && result.isErr) {
			throw result.fromErr
		}

		startServer(port, result => {

			// -- fatal error.
			if (result && result.isErr) {
				throw result.fromErr
			}

			moniterWorkers( )

		})

	})

}





module.exports = engram
