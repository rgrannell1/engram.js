#!/usr/bin/env node

"use strict"




var is            = require('is')
var log           = require('engram/logger')

var Result        = require('engram/result').Result
var Ok            = require('engram/result').Ok
var Err           = require('engram/result').Err

var URL           = require('url')

var database      = require('engram/database')
var createArchive = require('engram/create-archive')










var updateArchive = (url, {content, contentType}, callback) => {

	updateArchive.precond(url, content, contentType)

	var sql = `UPDATE archive SET
		content      = $content,
		content_type = $contentType
		WHERE archive.url = $url`

	database.serialise(db => {

		db.run(sql, {

			$url:   url,
			$content:     content,
			$contentType: contentType

		}, err => {
			callback(err ? Err(err) : Ok(url))
		})

	})

}

updateArchive.precond = (url, content, contentType) => {

	is.always.string(url)
	is.always.object(content)
	is.always.string(contentType)

}




var saveArchive = ({url, res, body}, reporter) => {

	saveArchive.precond({url, res, body}, reporter)

	createArchive(url, archiveResult => {

		archiveResult.onErr(err => {
			reporter(Err(err))
		})

		archiveResult.onOk(archive => {
			updateArchive(url, archive, reporter)
		})

	})

}

saveArchive.precond = ({url, res, body}, reporter) => {
	is.always.function(reporter)
}



module.exports = saveArchive
