#!/usr/bin/env node
"use strict";

var log = require("engram/logger");

var Result = require("engram/result").Result;
var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;

var is = require("is");

var extractTitle = require("engram/extract-title");
var createArchive = require("engram/create-archive");
var log = require("engram/logger");
var database = require("engram/database");

var insertURL = function (url, time, callback) {

	insertURL.precond(url, time, callback).onErr(function (err) {
		return callback(Err(err));
	});

	database["do"](function (db, callback) {

		db.run("INSERT INTO url VALUES (NULL, $url, $ctime, $mtime);", {

			$url: url,
			$ctime: time,
			$mtime: time

		}, function (err) {
			callback(err ? Err(err) : Ok());
		});
	});
};

insertURL.precond = function (url, time, callback) {

	return Result.of(function () {

		is.always.string(url);
		is.always.number(time);
	});
};

var insertBookmark = function (url, time, callback) {

	insertBookmark.precond(url, time, callback).onErr(function (err) {
		return callback(Err(err));
	});

	insertURL(url, time, function (result) {

		if (result.isErr) {
			callback(result);
		}

		db.run("INSERT INTO bookmark VALUES (NULL, $url_id, $ctime, $mtime);", {

			$url_id: this.lastID,
			$ctime: time,
			$mtime: time

		}, function (err) {
			callback(err ? Err(err) : Ok());
		});
	});
};

insertBookmark.precond = function (url, time, callback) {

	return Result.of(function () {

		is.always.string(url);
		is.always.number(time);
	});
};

module.exports = insertBookmark;
