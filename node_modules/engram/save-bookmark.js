#!/usr/bin/env node
"use strict";

var log = require("engram/logger");

var Result = require("engram/result").Result;
var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;

var is = require("is");

var extractTitle = require("engram/extract-title");
var createArchive = require("engram/create-archive");
var log = require("engram/logger");
var database = require("engram/database");

var insertURL = function (urlResult, callback) {

	urlResult.onErr(function (err) {
		callback(Err(err));
	});

	urlResult.onOk(function (url) {

		database["do"](function (db, callback) {

			db.run("INSERT OR IGNORE INTO url VALUES ($url, NULL, NULL, NULL);", {

				$url: url }, function (err) {
				insertArchive(err ? Err(err) : Ok(url), callback);
			});
		}, callback);
	});
};

var insertArchive = function (urlResult, callback) {

	urlResult.onErr(function (err) {
		callback(Err(err));
	});

	urlResult.onOk(function (url) {

		database["do"](function (db, callback) {

			db.run("INSERT OR IGNORE INTO archive VALUES ($url, NULL, NULL);", {

				$url: url

			}, function (err) {
				callback(err ? Err(err) : Ok());
			});
		}, callback);
	});
};

var insertBookmark = function (url, time, callback) {

	database["do"](function (db, callback) {

		db.run("INSERT INTO bookmark VALUES (NULL, $url, $ctime);", {

			$url: url,
			$ctime: time

		}, function (err) {
			insertURL(err ? Err(err) : Ok(url), callback);
		});
	}, callback);
};

module.exports = insertBookmark;