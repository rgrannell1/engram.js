#!/usr/bin/env node
"use strict";

var log = require("engram/es5/logger");

var Ok = require("engram/es5/result").Ok;
var Err = require("engram/es5/result").Err;
var Result = require("engram/es5/result").Result;

var is = require("is");
var URL = require("url");
var express = require("express");
var bodyParser = require("body-parser");

var saveBookmark = require("engram/es5/save-bookmark");
var showBookmarks = require("engram/es5/show-bookmarks");

var fetchBookmarks = require("engram/es5/fetch-bookmarks");

var deleteBookmark = require("engram/es5/delete-bookmark");
var importBookmarks = require("engram/es5/import-bookmarks");

var httpStatus = require("engram/es5/http-status");
var parse = require("engram/es5/parse");

var api = express.Router();

var routes = {
	get: {},
	post: {},
	"delete": {}
};

routes.get["/bookmarks"] = function (req, res) {

	var maxIdResult = parse.id(req.query.max_id);
	var amountResult = parse.amount(req.query.amount);

	Ok([maxIdResult, amountResult]).productOf().then(function (pair) {

		fetchBookmarks(pair[0], pair[1], res);
	});
};

routes.get["/bookmarks/all"] = function (req, res) {

	fetchBookmarks(10000000, 10000000, res);
};

routes.post["/import"] = function (req, res) {

	log.global.info("POST /import");

	var importResult = parse.bookmarks(req.body);

	importResult.onErr(function (_ref) {
		var message = _ref.message;
		var code = _ref.code;

		log.global.error({ message: message, code: code }, "import failed.");

		res.status(code);
		res.end();
	});

	importResult.onOk(function (bookmarks) {
		importBookmarks(bookmarks, res);
	});
};

routes["delete"]["/bookmarks/:id"] = function (req, res) {

	log.global.info("DELETE /api/bookmarks/" + req.params.id);

	deleteBookmark(res, req.params.id);
};

api.get("/bookmarks", routes.get["/bookmarks"]);
api.get("/bookmarks/all", routes.get["/bookmarks/all"]);

api["delete"]("/bookmarks/:id", routes["delete"]["/bookmarks/:id"]);

api.use(bodyParser.json({ limit: "100mb" }));

api.post("/import", routes.post["/import"]);

module.exports = api;