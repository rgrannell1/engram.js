#!/usr/bin/env node


"use strict";

var is = require('is');

var Ok = require('engram/es5/result').Ok;
var Err = require('engram/es5/result').Err;

var database = require('engram/es5/database');
var createArchive = require('engram/es5/create-archive');

var updateArchive = function updateArchive(url, _ref, callback) {
	var content = _ref.content;
	var contentType = _ref.contentType;

	updateArchive.precond(url, content, contentType);

	var sql = 'UPDATE archive SET\n\t\tcontent      = $content,\n\t\tcontent_type = $contentType\n\t\tWHERE archive.url = $url';

	database.serialise(function (db) {

		db.run(sql, {

			$url: url,
			$content: content,
			$contentType: contentType

		}, function (err) {
			callback(err ? Err(err) : Ok(url));
		});
	});
};

updateArchive.precond = function (url, content, contentType) {

	is.always.string(url);
	is.always.object(content);
	is.always.string(contentType);
};

var saveArchive = function saveArchive(_ref2, reporter) {
	var url = _ref2.url;
	var res = _ref2.res;
	var body = _ref2.body;

	saveArchive.precond({ url: url, res: res, body: body }, reporter);

	createArchive(url, function (archiveResult) {

		archiveResult.onErr(function (err) {
			reporter(Err(err));
		});

		archiveResult.onOk(function (archive) {
			updateArchive(url, archive, reporter);
		});
	});
};

saveArchive.precond = function (_ref3, reporter) {
	var url = _ref3.url;
	var res = _ref3.res;
	var body = _ref3.body;

	is.always['function'](reporter);
};

module.exports = saveArchive;
