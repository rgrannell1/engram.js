#!/usr/bin/env node


"use strict";

var Ok = require('engram/es5/result').Ok;
var Err = require('engram/es5/result').Err;

var is = require('is');

var createArchive = require('engram/es5/create-archive');
var database = require('engram/es5/database');

var insertURL = function insertURL(urlResult, callback) {

	urlResult.onErr(function (err) {
		callback(Err(err));
	});

	urlResult.onOk(function (url) {

		database.serialise(function (db) {

			db.run('INSERT OR IGNORE INTO url VALUES ($url, NULL, NULL, NULL);', {

				$url: url

			}, function (err) {
				insertArchive(err ? Err(err) : Ok(url), callback);
			});
		});
	});
};

var insertArchive = function insertArchive(urlResult, callback) {

	urlResult.onErr(function (err) {
		callback(Err(err));
	});

	urlResult.onOk(function (url) {

		database.serialise(function (db) {

			db.run('INSERT OR IGNORE INTO archive VALUES ($url, NULL, NULL);', {

				$url: url

			}, function (err) {
				callback(err ? Err(err) : Ok());
			});
		});
	});
};

var saveBookmark = function saveBookmark(url, time, callback) {

	database.serialise(function (db) {

		db.run('INSERT INTO bookmark VALUES (NULL, $url, $ctime);', {

			$url: url,
			$ctime: time

		}, function (err) {
			insertURL(err ? Err(err) : Ok(url), callback);
		});
	});
};

module.exports = saveBookmark;
