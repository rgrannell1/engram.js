#!/usr/bin/env node


"use strict";

var is = require('is');
var log = require('engram/es5/logger');

var Ok = require('engram/es5/result').Ok;
var Err = require('engram/es5/result').Err;

var database = require('engram/es5/database');

/*
	updateStatus(url, statusCode, callback)

	set the status code for a URL.

*/

var updateStatus = function updateStatus(url, statusCode, callback) {

	updateStatus.precond(url, statusCode, callback);

	var sql = 'UPDATE url SET status_code=$statusCode WHERE url = $url';

	database.serialise(function (db) {

		db.run(sql, {
			$url: url,
			$statusCode: statusCode
		}, function (err) {
			err ? callback(Err(err)) : callback(Ok(url));
		});
	});
};

updateStatus.precond = function (url, statusCode, callback) {

	is.always.string(url);
	is.always.number(statusCode);
	is.always['function'](callback);
};

/*
	saveStatus(reporter, url)

	request a URL, and save it's to the database.
*/

var saveStatus = function saveStatus(_ref, reporter) {
	var url = _ref.url;
	var res = _ref.res;
	var body = _ref.body;

	log.global.debug('saving status for ' + url);

	saveStatus.precond({ url: url, res: res, body: body }, reporter);

	updateStatus(url, res.statusCode, function (result) {
		reporter(Ok(url));
	});
};

saveStatus.precond = function (_ref2, reporter) {
	var url = _ref2.url;
	var res = _ref2.res;
	var body = _ref2.body;

	is.always.string(url);
	is.always.object(res);
	is.always['function'](reporter);
};

module.exports = saveStatus;
