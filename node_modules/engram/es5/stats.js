#!/usr/bin/env node


"use strict";

var is = require('is');
var log = require('engram/es5/logger');

var constants = require('engram/es5/constants');
var message = require('engram/es5/message');

{
	(function () {
		var amount = 0;
		var startTime = undefined;
		var lastTime = undefined;

		constants.BUS.on(message.URL_RESOLVED, function () {

			if (is.undefined(startTime)) {
				startTime = new Date().getTime();
			}

			lastTime = new Date().getTime();
			amount++;

			var rate = amount / ((lastTime - startTime) / 1000);

			if (isFinite(rate)) {
				log.stats.info({ rate: rate }, 'current rate: ' + rate);
			}
		});
	})();
}

{
	(function () {

		var totalTime = 0;
		var amount = 0;

		constants.BUS.on(message.URL_RESOLVED, function (urlResult) {

			urlResult.onOk(function (_ref) {
				var res = _ref.res;
				var body = _ref.body;

				amount++;
				totalTime += res.requestTime || 0;
			});

			var averageTime = Math.round(totalTime / amount, 1);

			log.stats.info({ averageTime: averageTime }, 'average request time: ' + averageTime + ' seconds.');
		});
	})();
}

{
	(function () {

		var failed = 0;
		var succeeded = 0;
		var amount = 0;

		constants.BUS.on(message.URL_RESOLVED, function (urlResult) {

			amount++;

			urlResult.onOk(function () {
				return ++succeeded;
			});
			urlResult.onErr(function () {
				return ++failed;
			});

			var averageRate = Math.round(succeeded / amount, 1);

			log.stats.info({ failed: failed, succeeded: succeeded, amount: amount }, 'average success rate: ' + averageRate);
		});
	})();
}
