#!/usr/bin/env node


"use strict";

var is = require('is');

var Ok = require('engram/es5/result').Ok;
var Err = require('engram/es5/result').Err;

var httpStatus = require('engram/es5/http-status');

var id = function id(_id) {

	return Ok(_id).then(function (id) {
		return parseInt(id, 10);
	}).then(function (id) {
		return id !== id ? Err(httpStatus.unprocessableEntity(id + ' could not be parsed.')) : id;
	}).then(function (id) {
		return id < 0 ? Err(httpStatus.unprocessableEntity(id + ' was less than zero.')) : id;
	}).then(function (id) {
		return id > 1000000 ? Err(httpStatus.unprocessableEntity(id + ' was too large.')) : id;
	});
};

var amount = function amount(_amount) {

	return Ok(_amount).then(function (num) {
		return parseInt(num, 10);
	}).then(function (amount) {
		return amount !== amount ? Err(httpStatus.unprocessableEntity(amount + ' could not be parsed.')) : amount;
	}).then(function (amount) {
		return amount < 0 ? Err(httpStatus.unprocessableEntity(amount + ' was less than zero.')) : amount;
	}).then(function (amount) {
		return amount > 1000000 ? Err(httpStatus.unprocessableEntity(amount + ' was too large.')) : amount;
	});
};

var bookmarks = function bookmarks(_bookmarks) {

	return Ok(_bookmarks).then(function (bookmarks) {
		return is.object(bookmarks) ? bookmarks : Err(httpStatus.unprocessableEntity('bookmarks were not parsed'));
	}).then(function (bookmarks) {
		return is.object(bookmarks.data) ? bookmarks : Err(httpStatus.unprocessableEntity('bookmarks malformed'));
	});
};

module.exports = {
	id: id,
	amount: amount,
	bookmarks: bookmarks
};
