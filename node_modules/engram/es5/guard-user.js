#!/usr/bin/env node


"use strict";

var constants = require('engram/es5/constants');
var message = require('engram/es5/message');
var utils = require('engram/es5/utils');
var log = require('engram/es5/logging/logger');

var basicAuth = require('basic-auth');
var fs = require('fs');

var readWhitelist = function readWhitelist(fpath) {

	return fs.readFileSync(fpath).toString().split('\n').filter(function (val) {
		return val && val.length > 0;
	});
};

{
	var logIpAddress;

	(function () {

		var whitelist = readWhitelist('data/ip-whitelist');

		logIpAddress = function logIpAddress(req) {

			var ip = utils.getIpAddress(req);

			ip.onOk(function (ip) {

				var isWhitelisted = whitelist.indexOf(ip) !== -1;

				isWhitelisted ? log.security.info({

					ip: ip, url: req.originalURL

				}, 'whitelisted ip address connected.') : log.security.warn({

					ip: ip, url: req.originalURL

				}, 'non-whitelisted ip address connected!');
			});

			ip.onErr(function (err) {

				log.security.error({ err: err }, 'failed to extract ip address!');
			});
		};
	})();
}

var guardUser = function guardUser(req, res, next) {

	constants.BUS.emit(message.USER_RESOLVED, req);
	logIpAddress(req);

	next();
};

module.exports = guardUser;
