#!/usr/bin/env node
"use strict";

var log = require("engram/es5/logger");

var is = require("is");
var Result = require("engram/es5/result").Result;
var Ok = require("engram/es5/result").Ok;
var Err = require("engram/es5/result").Err;

var saveBookmark = require("engram/es5/save-bookmark");
var database = require("engram/es5/database");

var constants = require("engram/es5/constants");
var message = require("engram/es5/message");

var request = require("request");

var publishURL = function (bookmark) {

	constants.BUS.fire(message.URL_REQUESTED, {
		url: decodeURIComponent(bookmark.url),
		time: bookmark.ctime || Math.round(new Date().getTime() / 1000)
	});
};

var importBookmarks = function (body, res) {

	importBookmarks.precond(body, res);

	// -- cast the object to an array.
	var importResult = Result.of(function () {

		return Object.keys(body.data).filter(function (number) {
			return parseInt(number, 10) === parseInt(number, 10);
		}).map(function (key) {
			return body.data[key];
		});
	});

	importResult.onErr(function (err) {

		log.global.info({ message: err.message, stack: err.stack }, "import failed.");

		res.status(500);
		res.end();
	});

	importResult.onOk(function (data) {

		log.global.info({ length: data.length }, "import accepted.");

		res.status(202);
		res.end();

		var staggeredTimeout = 0;

		data.sort(function (bookmark0, bookmark1) {
			return bookmark0.ctime - bookmark1.ctime;
		}).forEach(function (bookmark) {

			staggeredTimeout += 500;
			setTimeout(publishURL.bind({}, bookmark), staggeredTimeout);
		});
	});
};

importBookmarks.precond = function (body, res) {
	is.always.object(body);
};

module.exports = importBookmarks;