#!/usr/bin/env node
"use strict";

var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;
var Result = require("engram/result").Result;

var httpStatus = require("engram/http-status");

var id = function (id) {

	return Ok(id).then(function (id) {
		return parseInt(id, 10);
	}).then(function (id) {
		return id !== id ? httpStatus.unprocessableEntity("" + id + " could not be parsed.") : id;
	}).then(function (id) {
		return id < 0 ? httpStatus.unprocessableEntity("" + id + " was less than zero.") : id;
	}).then(function (id) {
		return id > 1000000 ? httpStatus.unprocessableEntity("" + id + " was too large.") : id;
	});
};

var amount = function (amount) {

	return Ok(amount).then(function (num) {
		return parseInt(num, 10);
	}).then(function (amount) {
		return amount !== amount ? httpStatus.unprocessableEntity("" + amount + " could not be parsed.") : amount;
	}).then(function (amount) {
		return amount < 0 ? httpStatus.unprocessableEntity("" + amount + " was less than zero.") : amount;
	}).then(function (amount) {
		return amount > 1000000 ? httpStatus.unprocessableEntity("" + amount + " was too large.") : amount;
	});
};

var bookmarks = function (bookmarks) {

	return Ok(bookmarks).then(function (bookmarks) {
		return is.object(bookmarks) ? bookmarks : httpStatus.unprocessableEntity("bookmarks were not parsed");
	}).then(function (bookmarks) {
		return is.object(bookmarks.data) ? bookmarks : httpStatus.unprocessableEntity("bookmarks malformed");
	});
};

module.exports = {
	id: id,
	amount: amount,
	bookmarks: bookmarks
};