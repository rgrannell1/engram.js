#!/usr/bin/env node
"use strict";

var log = require("engram/logger");

var Result = require("engram/result").Result;
var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;

var requestURL = require("engram/request-url");
var URL = require("url");

var database = require("engram/database");
var extractTitle = require("engram/extract-title");

var findUntitledURL = function (callback) {

	var sql = "\n\tSELECT * FROM url\n\n\tWHERE url.title is NULL\n\n\tORDER BY RANDOM()\n\tLIMIT 1;\n\t";

	database["do"](function (db, callback) {

		db.all(sql, function (err, rows) {
			err ? callback(Err(err)) : callback(Ok(rows));
		});
	}, callback);
};

var updateTitle = function (url, title, callback) {

	var sql = "UPDATE url SET title=$title WHERE url.url = $url";

	database["do"](function (db, callback) {

		db.run(sql, {
			$url: url,
			$title: title
		});
	}, callback);
};

var saveTitle = function (recall, state, urls) {

	urls.length === 0 ? recall(Ok(undefined), state.control.delay) : extractTitle(urls[0].url, function (titleResult) {

		titleResult.onErr(function (err) {
			recall(Err(Err), state.control.delay);
		});

		titleResult.onOk(function (title) {
			updateTitle(urls[0].url, title, function (updateResult) {
				recall(updateResult, state.control.delay);
			});
		});
	});
};

var moniter = function (recall, state) {
	findUntitledURL(function (urlResult) {

		urlResult.onErr(function (err) {
			recall(Err(err), state);
		});

		urlResult.onOk(saveTitle.bind({}, recall, state));

		recall("", state.control.delay);
	});
};

var reporter = function (url, state) {
	return state;
};

var state = {
	control: {
		delay: 10 * 1000
	},
	stats: {
		noURL: 0,
		urlFound: 0
	}
};

module.exports = {
	moniter: moniter,
	reporter: reporter,
	state: state
};