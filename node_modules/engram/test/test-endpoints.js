
"use strict"



var request   = require('request')
var express   = require('express')
var constants = require('./constants')
var commons   = require('./commons')
var server    = require('../app/start-server')
var mocha     = require('mocha')

var expect    = require('chai').expect





describe('- route existence', function ( ) {

	var testApps
	var testServers
	var port

	this.timeout(10000)

	before(done => {

		port = commons.freePortNumber( )

		server(commons.defaultArgs({
			port
		}), (apps, servers) => {
			testApps    = apps
			testServers = servers
			done( )
		})

	})

	it('has a spec for each protocol', ( ) => {

		Object.keys(testApps).forEach(protocol => {
			expect(testApps[protocol].specs).to.be.an('object')
		})

	})

	it('has the routes expected by the spec object', ( ) => {

		var toSkip = ['/static']

		Object.keys(testApps).forEach(protocol => {

			var attachedRoutes = commons.listRoutes(testApps[protocol])

			testApps[protocol].specs.routes.forEach(spec => {

				if (toSkip.indexOf(spec.route) === -1) {
					expect(attachedRoutes).to.include(spec.route)
				}

			})

		})
	})





	it('serves static files from static/', ( ) => {

		var testFile = 'public/javascript/es6/app.js'

		request(`https://localhost:5000/static/${testFile}`, (err, res, body) => {

			expect(res).to.not.be.undefined
			expect(res.statusCode).to.not.be(200)

		})

	})





	after(done => {
		testServers.https.close(done)
	})

})
