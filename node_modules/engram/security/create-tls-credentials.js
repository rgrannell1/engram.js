
"use strict"





var fs        = require('fs')
var is        = require('is')
var pem       = require('pem')
var constants = require('engram/commons/constants')
var Result = require('engram/commons/result').Result
var Ok     = require('engram/commons/result').Ok
var Err    = require('engram/commons/result').Err





var writeCredentials = (keypath, certpath, keys, callback) => {

	writeCredentials.precond(keypath, certpath, keys, callback)

	var writeResult = Result.of(( ) => {

		fs.writeFileSync(keypath,  keys.serviceKey)
		fs.writeFileSync(certpath, keys.certificate)

	})

	callback(writeResult)

}

writeCredentials.precond = (keypath, certpath, keys, callback) => {

	is.always.string(keypath)
	is.always.string(certpath)
	is.always.object(keys)
	is.always.function(callback)

}





var credentialConfig = {

	days:       constants.cert.EXPIRATION,
	selfSigned: true,

	keyBitsize: constants.cert.KEYSIZE,
	commonName: constants.cert.COMMONNAME,
	country:    constants.cert.COUNTRY

}




var createTLSCredentials = (keypath, certpath, callback) => {

	createTLSCredentials.precond(keypath, certpath, callback)

	pem.createCertificate(credentialConfig, (err, keys) => {

		if (err) {
			callback(Err(err))
		}

		writeCredentials(keypath, certpath, keys, writeResult => {

			writeResult.onErr(err => {
				log.security.error({err, keypath, certpath}, 'failed to create tls certificates.')
				callback(Err(err))
			})

			writeResult.onOK(( ) => {

				checkTLSCredentials({keypath, certpath}, exists => {

					if (!exists) {
						log.security.error({keypath, certpath}, 'failed to create tls certificates.')
						callback(Err(Error('failed to ensure certificates existed.')))
					} else {
						callback(Ok( ))
					}

				})

			})

		})

	})

}

createTLSCredentials.precond = (keypath, certpath, callback) => {

	is.always.string(keypath)
	is.always.string(certpath)
	is.always.function(callback)

}





module.exports = createTLSCredentials
