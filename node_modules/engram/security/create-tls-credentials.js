
"use strict"





var fs                  = require('fs')
var is                  = require('is')
var pem                 = require('pem')
var constants           = require('engram/commons/constants')

var log                 = require('engram/logging/logger')

var checkTLSCredentials = require('engram/security/check-tls-credentials')
var writeTLSCredentials = require('engram/security/write-tls-credentials')





var callbacks = { }





callbacks.writeOk = (callback, keypath, certpath) => {

	checkTLSCredentials({keypath, certpath}, exists => {

		if (!exists) {

			log.security.error({keypath, certpath}, 'failed to create tls certificates.')
			callback(Error('failed to ensure certificates existed.'))

		} else {

			log.security.info({keypath, certpath}, 'created tls certificates.')
			callback(null)

		}

	})

}

callbacks.writeErr = (callback, keypath, certpath, err) => {

	log.security.error({err, keypath, certpath}, 'failed to create tls certificates.')
	callback(err)

}





var credentialConfig = {

	days:       constants.cert.EXPIRATION,
	selfSigned: true,

	keyBitsize: constants.cert.KEYSIZE,
	commonName: constants.cert.COMMONNAME,
	country:    constants.cert.COUNTRY

}




var createTLSCredentials = (keypath, certpath, callback) => {

	createTLSCredentials.precond(keypath, certpath, callback)

	pem.createCertificate(credentialConfig, (err, keys) => {

		if (err) {
			callback(err)
		}

		var writeErr = writeTLSCredentials(keypath, certpath, keys)

		if (writeErr) {

			callbacks.writeErr(callback, keypath, certpath, writeErr)

		} else {

			callbacks.writeOk(callback, keypath, certpath)

		}

	})

}

createTLSCredentials.precond = (keypath, certpath, callback) => {

	is.always.string(keypath)
	is.always.string(certpath)
	is.always.function(callback)

}





module.exports = createTLSCredentials
