#!/usr/bin/env node
"use strict";

var log = require("engram/logger");

var Result = require("engram/result").Result;
var Ok = require("engram/result").Ok;
var Err = require("engram/result").Err;

var is = require("is");
var request = require("request");

var extractTitle = require("engram/extract-title");
var createArchive = require("engram/create-archive");
var log = require("engram/logger");
var sizeof = require("object-sizeof");

var cache = {
	order: [],
	value: {}
};

var cachedRequest = function (uri, options, callback) {
	var fresh = arguments[3] === undefined ? false : arguments[3];

	if (cache.value.hasOwnProperty(uri) && !fresh) {

		log.info({}, "URL lookup (cache) " + uri);

		callback(Ok({
			res: cache.value[uri].res,
			body: cache.value[uri].body
		}));
	} else {

		log.info({}, "URL lookup (cache miss) " + uri);

		request(uri, options, function (err, res, body) {

			if (err) {

				callback(Err({ uri: uri, err: err }));
			} else {

				cache.value[uri] = { res: res, body: body };
				cache.order.push(cache.value[uri]);

				callback(Ok({ res: res, body: body }));
			}
		});
	}
};

var requestURL = function (uri, opts, callback) {
	var fresh = arguments[3] === undefined ? false : arguments[3];

	if (!opts.hasOwnProperty("user-agent")) {
		opts["user-agent"] = "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.43 Safari/537.31";
	}

	try {
		cachedRequest(uri, opts, callback, fresh);
	} catch (err) {
		callback(Err({ uri: uri, err: err }));
	}
};

module.exports = requestURL;